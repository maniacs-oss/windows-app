<Page
    x:Class="wallabag.Views.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:wallabag.Controls"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:local="using:wallabag.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:t10b="using:Template10.Behaviors"
    xmlns:vm="using:wallabag.ViewModels"
    mc:Ignorable="d">

    <Page.DataContext>
        <vm:MainViewModel />
    </Page.DataContext>

    <Page.Resources>
        <MenuFlyout x:Key="ItemContextMenuMenuFlyout">
            <MenuFlyoutItem
                Command="{Binding MarkAsReadCommand}"
                Style="{StaticResource MenuFlyoutItemIconTemplate}"
                Tag="&#xE001;"
                Text="Mark as read"
                Visibility="{Binding Model.IsRead,
                                     Converter={StaticResource BooleanToVisibilityConverter},
                                     ConverterParameter=true}" />
            <MenuFlyoutItem
                Command="{Binding UnmarkAsReadCommand}"
                Style="{StaticResource MenuFlyoutItemIconTemplate}"
                Tag="&#xE052;"
                Text="Unmark as read"
                Visibility="{Binding Model.IsRead,
                                     Converter={StaticResource BooleanToVisibilityConverter}}" />
            <MenuFlyoutItem
                Command="{Binding MarkAsStarredCommand}"
                Style="{StaticResource MenuFlyoutItemIconTemplate}"
                Tag="&#xE006;"
                Text="Mark as favorite"
                Visibility="{Binding Model.IsStarred,
                                     Converter={StaticResource BooleanToVisibilityConverter},
                                     ConverterParameter=true}" />
            <MenuFlyoutItem
                Command="{Binding UnmarkAsStarredCommand}"
                Style="{StaticResource MenuFlyoutItemIconTemplate}"
                Tag="&#xE007;"
                Text="Unmark as favorite"
                Visibility="{Binding Model.IsStarred,
                                     Converter={StaticResource BooleanToVisibilityConverter}}" />
            <MenuFlyoutSeparator />
            <MenuFlyoutItem
                Command="{Binding EditTagsCommand}"
                Style="{StaticResource MenuFlyoutItemIconTemplate}"
                Tag="&#xE1CB;"
                Text="Edit tags" />
            <MenuFlyoutItem
                Command="{Binding ShareCommand}"
                Style="{StaticResource MenuFlyoutItemIconTemplate}"
                Tag="&#xE72D;"
                Text="Share" />
            <MenuFlyoutItem
                Command="{Binding OpenInBrowserCommand}"
                Style="{StaticResource MenuFlyoutItemIconTemplate}"
                Tag="&#xE12B;"
                Text="Open in browser" />
            <MenuFlyoutSeparator />
            <MenuFlyoutItem
                Command="{Binding DeleteCommand}"
                Style="{StaticResource MenuFlyoutItemIconTemplate}"
                Tag="&#xE107;"
                Text="Delete" />
        </MenuFlyout>
        <Storyboard x:Name="ShowSearchStoryboard">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="searchBox" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="0">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Visible</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="searchBox" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1" />
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimation
                d:IsOptimized="True"
                Duration="0"
                Storyboard.TargetName="searchButton"
                Storyboard.TargetProperty="(UIElement.Opacity)"
                To="0" />
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="searchButton" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="0">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Collapsed</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="filterButton" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="0">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Visible</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="filterButton" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Name="ShowFilterStoryboard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="filterStackPanel" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1" />
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="filterStackPanel" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="0">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Visible</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="filterStackPanel" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)">
                <EasingDoubleKeyFrame KeyTime="0" Value="-50">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <BackEase EasingMode="EaseOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <BackEase EasingMode="EaseOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Name="HideSearchStoryboard">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="searchBox" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="0">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Visible</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.3">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Collapsed</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="searchBox" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="0" />
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="searchButton" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="0">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Collapsed</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.3">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Visible</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="filterButton" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="0">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Visible</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.3">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Collapsed</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="filterButton" Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="0" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Name="HideFilterStoryboard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="filterStackPanel" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0" />
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="filterStackPanel" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.5">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Collapsed</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="filterStackPanel" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)">
                <EasingDoubleKeyFrame KeyTime="0" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <BackEase EasingMode="EaseOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="-50">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <BackEase EasingMode="EaseOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </Page.Resources>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>
        <Grid Background="{ThemeResource SystemControlBackgroundChromeMediumBrush}">
            <TextBlock Style="{StaticResource PageTitleTextBlockStyle}" Text="UNREAD" />
            <AutoSuggestBox
                x:Name="searchBox"
                Margin="8"
                VerticalAlignment="Center"
                x:DeferLoadStrategy="Lazy"
                GotFocus="searchBox_GotFocus"
                ItemsSource="{x:Bind ViewModel.SearchQuerySuggestions, Mode=OneWay}"
                LostFocus="searchBox_LostFocus"
                PlaceholderText="Search…"
                QueryIcon="Find"
                Text="{x:Bind ViewModel.CurrentSearchProperties.Query, Mode=TwoWay}"
                Visibility="Collapsed">
                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="QuerySubmitted">
                        <core:InvokeCommandAction Command="{x:Bind ViewModel.SearchQuerySubmittedCommand}" />
                    </core:EventTriggerBehavior>
                    <core:EventTriggerBehavior EventName="TextChanged">
                        <core:InvokeCommandAction Command="{x:Bind ViewModel.SearchQueryChangedCommand}" />
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
            </AutoSuggestBox>
            <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                <AppBarButton
                    x:Name="searchButton"
                    Click="searchButton_Click"
                    Icon="Find"
                    IsCompact="True" />
                <AppBarButton
                    x:Name="filterButton"
                    x:DeferLoadStrategy="Lazy"
                    Click="filterButton_Click"
                    Icon="Filter"
                    IsCompact="True"
                    Visibility="Collapsed" />
            </StackPanel>
        </Grid>
        <controls:AdaptiveGridView
            x:Name="ItemGridView"
            Grid.Row="1"
            IsItemClickEnabled="True"
            ItemsSource="{x:Bind ViewModel.Items, Mode=OneWay}"
            MinItemHeight="175"
            MinItemWidth="300">
            <controls:AdaptiveGridView.ItemTemplate>
                <DataTemplate x:DataType="vm:ItemViewModel">
                    <RelativePanel x:Name="RootPanel">
                        <Image
                            x:Name="image"
                            RelativePanel.AlignBottomWithPanel="True"
                            RelativePanel.AlignLeftWithPanel="True"
                            RelativePanel.AlignRightWithPanel="True"
                            RelativePanel.AlignTopWithPanel="True"
                            Stretch="UniformToFill">
                            <Image.Source>
                                <BitmapImage x:Name="RootImageSource" UriSource="{x:Bind Model.PreviewImageUri}" />
                            </Image.Source>
                        </Image>
                        <Border
                            Background="#4F000000"
                            RelativePanel.AlignBottomWithPanel="True"
                            RelativePanel.AlignLeftWithPanel="True"
                            RelativePanel.AlignRightWithPanel="True"
                            RelativePanel.AlignTopWithPanel="True"
                            RequestedTheme="Dark">
                            <StackPanel
                                x:Name="ContentStackPanel"
                                Margin="12"
                                VerticalAlignment="Center">
                                <TextBlock
                                    x:Name="Title"
                                    Margin="4,2"
                                    MaxLines="2"
                                    Text="{x:Bind Model.Title}"
                                    TextTrimming="CharacterEllipsis"
                                    TextWrapping="Wrap" />
                                <TextBlock
                                    x:Name="Hostname"
                                    Margin="4,2"
                                    Opacity="0.7"
                                    Style="{StaticResource CaptionTextBlockStyle}"
                                    Text="{x:Bind Model.Hostname}" />
                            </StackPanel>
                        </Border>
                    </RelativePanel>
                </DataTemplate>
            </controls:AdaptiveGridView.ItemTemplate>
            <interactivity:Interaction.Behaviors>
                <core:EventTriggerBehavior EventName="ItemClick">
                    <core:InvokeCommandAction Command="{x:Bind ViewModel.ItemClickCommand}" />
                </core:EventTriggerBehavior>
            </interactivity:Interaction.Behaviors>
        </controls:AdaptiveGridView>
        <StackPanel
            x:Name="filterStackPanel"
            Grid.Row="1"
            VerticalAlignment="Top"
            x:DeferLoadStrategy="Lazy"
            Background="{ThemeResource SystemControlBackgroundChromeMediumBrush}"
            RenderTransformOrigin="0.5,0.5"
            Visibility="Collapsed">
            <StackPanel.RenderTransform>
                <CompositeTransform />
            </StackPanel.RenderTransform>
            <TextBlock Style="{StaticResource MenuHeaderTextBlockStyle}" Text="ITEM TYPE" />
            <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                <RadioButton
                    Background="#16a085"
                    Content="&#xE138;"
                    IsChecked="True"
                    Style="{StaticResource IconRadioButtonStyle}">
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Checked">
                            <core:InvokeCommandAction Command="{x:Bind ViewModel.SetItemTypeFilterCommand}" CommandParameter="all" />
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </RadioButton>
                <RadioButton
                    Background="#2980b9"
                    Content="&#xE052;"
                    Style="{StaticResource IconRadioButtonStyle}">
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Checked">
                            <core:InvokeCommandAction Command="{x:Bind ViewModel.SetItemTypeFilterCommand}" CommandParameter="unread" />
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </RadioButton>
                <RadioButton
                    Background="#f39c12"
                    Content="&#xE006;"
                    Style="{StaticResource IconRadioButtonStyle}">
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Checked">
                            <core:InvokeCommandAction Command="{x:Bind ViewModel.SetItemTypeFilterCommand}" CommandParameter="starred" />
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </RadioButton>
                <RadioButton
                    Background="#c0392b"
                    Content="&#xE1D3;"
                    Style="{StaticResource IconRadioButtonStyle}">
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Checked">
                            <core:InvokeCommandAction Command="{x:Bind ViewModel.SetItemTypeFilterCommand}" CommandParameter="archived" />
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </RadioButton>
            </StackPanel>
            <TextBlock Style="{StaticResource MenuHeaderTextBlockStyle}" Text="ESTIMATED READING TIME" />
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <RadioButton HorizontalAlignment="Stretch" Style="{StaticResource ToggleButtonRadioButtonStyle}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock
                            Margin="0,0,8,0"
                            VerticalAlignment="Center"
                            FontFamily="Segoe MDL2 Assets"
                            Text="&#xE143;" />
                        <TextBlock Text="shortest first" />
                    </StackPanel>
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Checked">
                            <core:InvokeCommandAction Command="{x:Bind ViewModel.SetEstimatedReadingTimeFilterCommand}" CommandParameter="asc" />
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </RadioButton>
                <RadioButton
                    Grid.Column="1"
                    HorizontalAlignment="Stretch"
                    Style="{StaticResource ToggleButtonRadioButtonStyle}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock
                            Margin="0,0,8,0"
                            VerticalAlignment="Center"
                            FontFamily="Segoe MDL2 Assets"
                            RenderTransformOrigin="0.5,0.5"
                            Text="&#xE143;">
                            <TextBlock.RenderTransform>
                                <CompositeTransform ScaleY="-1" />
                            </TextBlock.RenderTransform>
                        </TextBlock>
                        <TextBlock Text="longest first" />
                    </StackPanel>
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Checked">
                            <core:InvokeCommandAction Command="{x:Bind ViewModel.SetEstimatedReadingTimeFilterCommand}" CommandParameter="desc" />
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </RadioButton>
            </Grid>
            <TextBlock Style="{StaticResource MenuHeaderTextBlockStyle}" Text="CREATION DATE" />
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <RadioButton HorizontalAlignment="Stretch" Style="{StaticResource ToggleButtonRadioButtonStyle}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock
                            Margin="0,0,8,0"
                            VerticalAlignment="Center"
                            FontFamily="Segoe MDL2 Assets"
                            Text="&#xE143;" />
                        <TextBlock Text="newest first" />
                    </StackPanel>
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Checked">
                            <core:InvokeCommandAction Command="{x:Bind ViewModel.SetCreationDateFilterCommand}" CommandParameter="asc" />
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </RadioButton>
                <RadioButton
                    Grid.Column="1"
                    HorizontalAlignment="Stretch"
                    Style="{StaticResource ToggleButtonRadioButtonStyle}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock
                            Margin="0,0,8,0"
                            VerticalAlignment="Center"
                            FontFamily="Segoe MDL2 Assets"
                            RenderTransformOrigin="0.5,0.5"
                            Text="&#xE143;">
                            <TextBlock.RenderTransform>
                                <CompositeTransform ScaleY="-1" />
                            </TextBlock.RenderTransform>
                        </TextBlock>
                        <TextBlock Text="oldest first" />
                    </StackPanel>
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Checked">
                            <core:InvokeCommandAction Command="{x:Bind ViewModel.SetCreationDateFilterCommand}" CommandParameter="desc" />
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </RadioButton>
            </Grid>
            <TextBlock Style="{StaticResource MenuHeaderTextBlockStyle}" Text="LANGUAGE" />
            <AutoSuggestBox BorderThickness="0" PlaceholderText="enter language…" />
        </StackPanel>
        <CommandBar x:Name="MainCommandBar" Grid.Row="2">
            <AppBarButton
                Command="{x:Bind ViewModel.AddCommand}"
                Icon="Add"
                Label="Add" />
            <AppBarButton
                Command="{x:Bind ViewModel.SyncCommand}"
                Icon="Sync"
                Label="Sync" />
            <AppBarButton
                Click="EnableMultipleSelectionButtonClick"
                Icon="Bullets"
                Label="Select" />
            <CommandBar.SecondaryCommands>
                <AppBarButton Command="{x:Bind ViewModel.NavigateToSettingsPageCommand}" Label="Settings" />
            </CommandBar.SecondaryCommands>
        </CommandBar>
        <CommandBar
            x:Name="MultipleSelectionCommandBar"
            Grid.Row="2"
            Visibility="Collapsed">
            <AppBarButton Icon="Edit" Label="Edit">
                <AppBarButton.Flyout>
                    <MenuFlyout>
                        <MenuFlyoutItem
                            Command="{x:Bind SelectionViewModel.MarkAsReadCommand}"
                            Style="{StaticResource MenuFlyoutItemIconTemplate}"
                            Tag="&#xE001;"
                            Text="Mark as read" />
                        <MenuFlyoutItem
                            Command="{x:Bind SelectionViewModel.UnmarkAsReadCommand}"
                            Style="{StaticResource MenuFlyoutItemIconTemplate}"
                            Tag="&#xE052;"
                            Text="Unmark as read" />
                        <MenuFlyoutItem
                            Command="{x:Bind SelectionViewModel.MarkAsFavoriteCommand}"
                            Style="{StaticResource MenuFlyoutItemIconTemplate}"
                            Tag="&#xE006;"
                            Text="Mark as favorite" />
                        <MenuFlyoutItem
                            Command="{x:Bind SelectionViewModel.UnmarkAsFavoriteCommand}"
                            Style="{StaticResource MenuFlyoutItemIconTemplate}"
                            Tag="&#xE007;"
                            Text="Unmark as favorite" />
                        <MenuFlyoutSeparator />
                        <MenuFlyoutItem
                            Command="{x:Bind SelectionViewModel.EditTagsCommand}"
                            Style="{StaticResource MenuFlyoutItemIconTemplate}"
                            Tag="&#xE1CB;"
                            Text="Edit tags" />
                        <MenuFlyoutItem
                            Command="{x:Bind SelectionViewModel.OpenInBrowserCommand}"
                            Style="{StaticResource MenuFlyoutItemIconTemplate}"
                            Tag="&#xE12B;"
                            Text="Open in browser" />
                        <MenuFlyoutSeparator />
                        <MenuFlyoutItem
                            Command="{x:Bind SelectionViewModel.DeleteCommand}"
                            Style="{StaticResource MenuFlyoutItemIconTemplate}"
                            Tag="&#xE107;"
                            Text="Delete" />
                    </MenuFlyout>

                </AppBarButton.Flyout>
            </AppBarButton>
            <AppBarButton
                Click="DisableMultipleSelectionButtonClick"
                Icon="Cancel"
                Label="Cancel" />
        </CommandBar>
    </Grid>
</Page>
